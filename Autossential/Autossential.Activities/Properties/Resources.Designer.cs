//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Autossential.Activities.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Autossential.Activities.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column indexes which will be applied the aggregation..
        /// </summary>
        public static string Aggregate_ColumnIndexes_Description {
            get {
                return ResourceManager.GetString("Aggregate_ColumnIndexes_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column Indexes.
        /// </summary>
        public static string Aggregate_ColumnIndexes_DisplayName {
            get {
                return ResourceManager.GetString("Aggregate_ColumnIndexes_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column names which will be applied the aggregation..
        /// </summary>
        public static string Aggregate_ColumnNames_Description {
            get {
                return ResourceManager.GetString("Aggregate_ColumnNames_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column Names.
        /// </summary>
        public static string Aggregate_ColumnNames_DisplayName {
            get {
                return ResourceManager.GetString("Aggregate_ColumnNames_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The generated DataRow from aggregation.
        /// </summary>
        public static string Aggregate_DataRow_Description {
            get {
                return ResourceManager.GetString("Aggregate_DataRow_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Row.
        /// </summary>
        public static string Aggregate_DataRow_DisplayName {
            get {
                return ResourceManager.GetString("Aggregate_DataRow_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data table which the aggregate function will be applied.
        /// </summary>
        public static string Aggregate_DataTable_Description {
            get {
                return ResourceManager.GetString("Aggregate_DataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Table.
        /// </summary>
        public static string Aggregate_DataTable_DisplayName {
            get {
                return ResourceManager.GetString("Aggregate_DataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides aggregate functions for data table.
        /// </summary>
        public static string Aggregate_Description {
            get {
                return ResourceManager.GetString("Aggregate_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aggregate.
        /// </summary>
        public static string Aggregate_DisplayName {
            get {
                return ResourceManager.GetString("Aggregate_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The aggregate function.
        /// </summary>
        public static string Aggregate_Function_Description {
            get {
                return ResourceManager.GetString("Aggregate_Function_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function.
        /// </summary>
        public static string Aggregate_Function_DisplayName {
            get {
                return ResourceManager.GetString("Aggregate_Function_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication.
        /// </summary>
        public static string Authentication_Category {
            get {
                return ResourceManager.GetString("Authentication_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checks if a given expression is true, if not, thrown the specified exception..
        /// </summary>
        public static string CheckPoint_Description {
            get {
                return ResourceManager.GetString("CheckPoint_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check Point.
        /// </summary>
        public static string CheckPoint_DisplayName {
            get {
                return ResourceManager.GetString("CheckPoint_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The exception that will be thrown if the expression is not true..
        /// </summary>
        public static string CheckPoint_Exception_Description {
            get {
                return ResourceManager.GetString("CheckPoint_Exception_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception.
        /// </summary>
        public static string CheckPoint_Exception_DisplayName {
            get {
                return ResourceManager.GetString("CheckPoint_Exception_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression to be evaluated..
        /// </summary>
        public static string CheckPoint_Expression_Description {
            get {
                return ResourceManager.GetString("CheckPoint_Expression_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression.
        /// </summary>
        public static string CheckPoint_Expression_DisplayName {
            get {
                return ResourceManager.GetString("CheckPoint_Expression_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Common.
        /// </summary>
        public static string Common_Category {
            get {
                return ResourceManager.GetString("Common_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like a Sequence Activity, it executes a set of child activities sequentially, however, it can be combined with Exit Activity which interrupts the children execution flow exiting from the Container beforehand..
        /// </summary>
        public static string Container_Description {
            get {
                return ResourceManager.GetString("Container_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Container.
        /// </summary>
        public static string Container_DisplayName {
            get {
                return ResourceManager.GetString("Container_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, continue executing the remaining activities even if the current activity has failed..
        /// </summary>
        public static string ContinueOnError_Description {
            get {
                return ResourceManager.GetString("ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ContinueOnError.
        /// </summary>
        public static string ContinueOnError_DisplayName {
            get {
                return ResourceManager.GetString("ContinueOnError_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The desired culture, eg.: en-US, pt-BR, jp-JP, etc..
        /// </summary>
        public static string CultureScope_CultureName_Description {
            get {
                return ResourceManager.GetString("CultureScope_CultureName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CultureName.
        /// </summary>
        public static string CultureScope_CultureName_DisplayName {
            get {
                return ResourceManager.GetString("CultureScope_CultureName_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applies a different culture for the current thread..
        /// </summary>
        public static string CultureScope_Description {
            get {
                return ResourceManager.GetString("CultureScope_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Culture Scope.
        /// </summary>
        public static string CultureScope_DisplayName {
            get {
                return ResourceManager.GetString("CultureScope_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Data Row.
        /// </summary>
        public static string DataRowToDictionary_DataRow_Description {
            get {
                return ResourceManager.GetString("DataRowToDictionary_DataRow_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataRow.
        /// </summary>
        public static string DataRowToDictionary_DataRow_DisplayName {
            get {
                return ResourceManager.GetString("DataRowToDictionary_DataRow_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Converts a DataRow to Dictionary.
        /// </summary>
        public static string DataRowToDictionary_Description {
            get {
                return ResourceManager.GetString("DataRowToDictionary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output Dictionary.
        /// </summary>
        public static string DataRowToDictionary_Dictionary_Description {
            get {
                return ResourceManager.GetString("DataRowToDictionary_Dictionary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dictionary.
        /// </summary>
        public static string DataRowToDictionary_Dictionary_DisplayName {
            get {
                return ResourceManager.GetString("DataRowToDictionary_Dictionary_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataRow To Dictionary.
        /// </summary>
        public static string DataRowToDictionary_DisplayName {
            get {
                return ResourceManager.GetString("DataRowToDictionary_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrements the value of a variable by the specified decrement value.
        /// </summary>
        public static string Decrement_Description {
            get {
                return ResourceManager.GetString("Decrement_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrement.
        /// </summary>
        public static string Decrement_DisplayName {
            get {
                return ResourceManager.GetString("Decrement_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The decrement value.
        /// </summary>
        public static string Decrement_Value_Description {
            get {
                return ResourceManager.GetString("Decrement_Value_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string Decrement_Value_DisplayName {
            get {
                return ResourceManager.GetString("Decrement_Value_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The decrement value cannot be smaller than 1..
        /// </summary>
        public static string Decrement_Value_Error {
            get {
                return ResourceManager.GetString("Decrement_Value_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable to decrement.
        /// </summary>
        public static string Decrement_Variable_Description {
            get {
                return ResourceManager.GetString("Decrement_Variable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable.
        /// </summary>
        public static string Decrement_Variable_DisplayName {
            get {
                return ResourceManager.GetString("Decrement_Variable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output Data Table.
        /// </summary>
        public static string DictionaryToDataTable_DataTable_Description {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_DataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string DictionaryToDataTable_DataTable_DisplayName {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_DataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Converts a Dictionary to DataTable.
        /// </summary>
        public static string DictionaryToDataTable_Description {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dictionary.
        /// </summary>
        public static string DictionaryToDataTable_Dictionary_Description {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_Dictionary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dictionary.
        /// </summary>
        public static string DictionaryToDataTable_Dictionary_DisplayName {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_Dictionary_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dictionary To DataTable.
        /// </summary>
        public static string DictionaryToDataTable_DisplayName {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type must derived from Dictionary&lt;T1,T2&gt;.
        /// </summary>
        public static string DictionaryToDataTable_InputDictionary_Error {
            get {
                return ResourceManager.GetString("DictionaryToDataTable_InputDictionary_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do.
        /// </summary>
        public static string Do {
            get {
                return ResourceManager.GetString("Do", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns an enumerable collection of file names that match the provided search patterns and directories. Optionally also searches into subdirectories..
        /// </summary>
        public static string EnumerateFiles_Description {
            get {
                return ResourceManager.GetString("EnumerateFiles_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumerate Files.
        /// </summary>
        public static string EnumerateFiles_DisplayName {
            get {
                return ResourceManager.GetString("EnumerateFiles_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The relative or absolute path (or collection of paths) to the directory (or directories) to search..
        /// </summary>
        public static string EnumerateFiles_Path_Description {
            get {
                return ResourceManager.GetString("EnumerateFiles_Path_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string EnumerateFiles_Path_DisplayName {
            get {
                return ResourceManager.GetString("EnumerateFiles_Path_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An enumerable collection of the full names (including paths) for the files in the directory specified by path and that match the specified search pattern and option..
        /// </summary>
        public static string EnumerateFiles_Result_Description {
            get {
                return ResourceManager.GetString("EnumerateFiles_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string EnumerateFiles_Result_DisplayName {
            get {
                return ResourceManager.GetString("EnumerateFiles_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the enumeration values that specifies whether the search operation should include only the current directory or should include all subdirectories..
        /// </summary>
        public static string EnumerateFiles_SearchOption_Description {
            get {
                return ResourceManager.GetString("EnumerateFiles_SearchOption_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SearchOption.
        /// </summary>
        public static string EnumerateFiles_SearchOption_DisplayName {
            get {
                return ResourceManager.GetString("EnumerateFiles_SearchOption_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The search string to match against the names of files in path. This parameter  can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn&apos;t support regular expressions..
        /// </summary>
        public static string EnumerateFiles_SearchPattern_Description {
            get {
                return ResourceManager.GetString("EnumerateFiles_SearchPattern_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SearchPattern.
        /// </summary>
        public static string EnumerateFiles_SearchPattern_DisplayName {
            get {
                return ResourceManager.GetString("EnumerateFiles_SearchPattern_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Optional) Default is *.*.
        /// </summary>
        public static string EnumerateFiles_SearchPattern_HintText {
            get {
                return ResourceManager.GetString("EnumerateFiles_SearchPattern_HintText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exits from the Container Activity interrupting any child executions after it..
        /// </summary>
        public static string Exit_Description {
            get {
                return ResourceManager.GetString("Exit_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit.
        /// </summary>
        public static string Exit_DisplayName {
            get {
                return ResourceManager.GetString("Exit_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increments the value of a variable by the specified increment value.
        /// </summary>
        public static string Increment_Description {
            get {
                return ResourceManager.GetString("Increment_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increment.
        /// </summary>
        public static string Increment_DisplayName {
            get {
                return ResourceManager.GetString("Increment_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The increment value.
        /// </summary>
        public static string Increment_Value_Description {
            get {
                return ResourceManager.GetString("Increment_Value_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string Increment_Value_DisplayName {
            get {
                return ResourceManager.GetString("Increment_Value_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The increment value cannot be smaller than 1..
        /// </summary>
        public static string Increment_Value_Error {
            get {
                return ResourceManager.GetString("Increment_Value_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The variable to be incremented.
        /// </summary>
        public static string Increment_Variable_Description {
            get {
                return ResourceManager.GetString("Increment_Variable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable.
        /// </summary>
        public static string Increment_Variable_DisplayName {
            get {
                return ResourceManager.GetString("Increment_Variable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input.
        /// </summary>
        public static string Input_Category {
            get {
                return ResourceManager.GetString("Input_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference.
        /// </summary>
        public static string InputOutput_Category {
            get {
                return ResourceManager.GetString("InputOutput_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        public static string Options_Category {
            get {
                return ResourceManager.GetString("Options_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output.
        /// </summary>
        public static string Output_Category {
            get {
                return ResourceManager.GetString("Output_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When true, it avoids the column name already belongs to DataTable error by adding a numeric suffix to it..
        /// </summary>
        public static string PromoteHeaders_AutoRename_Description {
            get {
                return ResourceManager.GetString("PromoteHeaders_AutoRename_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoRename.
        /// </summary>
        public static string PromoteHeaders_AutoRename_DisplayName {
            get {
                return ResourceManager.GetString("PromoteHeaders_AutoRename_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Promotes the first row of values to new column headers..
        /// </summary>
        public static string PromoteHeaders_Description {
            get {
                return ResourceManager.GetString("PromoteHeaders_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Promote Headers.
        /// </summary>
        public static string PromoteHeaders_DisplayName {
            get {
                return ResourceManager.GetString("PromoteHeaders_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no rows in input data table to promote..
        /// </summary>
        public static string PromoteHeaders_EmptyRows_Error {
            get {
                return ResourceManager.GetString("PromoteHeaders_EmptyRows_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input datatable.
        /// </summary>
        public static string PromoteHeaders_InputDataTable_Description {
            get {
                return ResourceManager.GetString("PromoteHeaders_InputDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string PromoteHeaders_InputDataTable_DisplayName {
            get {
                return ResourceManager.GetString("PromoteHeaders_InputDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output datatable.
        /// </summary>
        public static string PromoteHeaders_OutputDataTable_Description {
            get {
                return ResourceManager.GetString("PromoteHeaders_OutputDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string PromoteHeaders_OutputDataTable_DisplayName {
            get {
                return ResourceManager.GetString("PromoteHeaders_OutputDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom mode requires either {0} or {1}..
        /// </summary>
        public static string RemoveEmptyRows_CustomMode_Error {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_CustomMode_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options (Custom Mode).
        /// </summary>
        public static string RemoveEmptyRows_CustomOptions_Category {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_CustomOptions_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data table.
        /// </summary>
        public static string RemoveEmptyRows_DataTable_Description {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_DataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string RemoveEmptyRows_DataTable_DisplayName {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_DataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes the empty rows from a data table.
        /// </summary>
        public static string RemoveEmptyRows_Description {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Empty Rows.
        /// </summary>
        public static string RemoveEmptyRows_DisplayName {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result data table.
        /// </summary>
        public static string RemoveEmptyRows_OutputDataTable_Description {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_OutputDataTable_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTable.
        /// </summary>
        public static string RemoveEmptyRows_OutputDataTable_DisplayName {
            get {
                return ResourceManager.GetString("RemoveEmptyRows_OutputDataTable_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the amount of time (in milliseconds) to wait for the activity to run before an error is thrown. The default value is 30000 (30 seconds)..
        /// </summary>
        public static string Timeout_Description {
            get {
                return ResourceManager.GetString("Timeout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout (milliseconds).
        /// </summary>
        public static string Timeout_DisplayName {
            get {
                return ResourceManager.GetString("Timeout_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The activity timed out and was canceled..
        /// </summary>
        public static string Timeout_Error {
            get {
                return ResourceManager.GetString("Timeout_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompress files from a zip archive..
        /// </summary>
        public static string Unzip_Description {
            get {
                return ResourceManager.GetString("Unzip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip entry name ends in directory separator character but contains data.
        /// </summary>
        public static string Unzip_DirectoryNameWithData_Error {
            get {
                return ResourceManager.GetString("Unzip_DirectoryNameWithData_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unzip.
        /// </summary>
        public static string Unzip_DisplayName {
            get {
                return ResourceManager.GetString("Unzip_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracting Zip entry would have resulted in a file outside the specified destination directory..
        /// </summary>
        public static string Unzip_ExtractingResultsInOutside_Error {
            get {
                return ResourceManager.GetString("Unzip_ExtractingResultsInOutside_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to the folder where files will be extracted..
        /// </summary>
        public static string Unzip_ExtractTo_Description {
            get {
                return ResourceManager.GetString("Unzip_ExtractTo_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ExtractTo.
        /// </summary>
        public static string Unzip_ExtractTo_DisplayName {
            get {
                return ResourceManager.GetString("Unzip_ExtractTo_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When true, overwrites an existing file that has the same name as the destination file..
        /// </summary>
        public static string Unzip_Overwrite_Description {
            get {
                return ResourceManager.GetString("Unzip_Overwrite_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite.
        /// </summary>
        public static string Unzip_Overwrite_DisplayName {
            get {
                return ResourceManager.GetString("Unzip_Overwrite_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The compressed file..
        /// </summary>
        public static string Unzip_ZipFilePath_Description {
            get {
                return ResourceManager.GetString("Unzip_ZipFilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipFilePath.
        /// </summary>
        public static string Unzip_ZipFilePath_DisplayName {
            get {
                return ResourceManager.GetString("Unzip_ZipFilePath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a value either for {0} or {1}, but not both..
        /// </summary>
        public static string ValidationExclusiveProperties_Error {
            get {
                return ResourceManager.GetString("ValidationExclusiveProperties_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide values for both {0} and {1}..
        /// </summary>
        public static string ValidationOverloadGroup_Error {
            get {
                return ResourceManager.GetString("ValidationOverloadGroup_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot be used outside of a {0}..
        /// </summary>
        public static string ValidationScope_Error {
            get {
                return ResourceManager.GetString("ValidationScope_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a value of type {0} for {1}..
        /// </summary>
        public static string ValidationType_Error {
            get {
                return ResourceManager.GetString("ValidationType_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be a string or a collection of strings.
        /// </summary>
        public static string ValidationType_StringOrStrings_Error {
            get {
                return ResourceManager.GetString("ValidationType_StringOrStrings_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a value for {0}..
        /// </summary>
        public static string ValidationValue_Error {
            get {
                return ResourceManager.GetString("ValidationValue_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waits till the file be available..
        /// </summary>
        public static string WaitFile_Description {
            get {
                return ResourceManager.GetString("WaitFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wait File.
        /// </summary>
        public static string WaitFile_DisplayName {
            get {
                return ResourceManager.GetString("WaitFile_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file path does not exist. Enable the WaitForExist option if you want to wait for the file to exist..
        /// </summary>
        public static string WaitFile_FileDoesNotExist_Error {
            get {
                return ResourceManager.GetString("WaitFile_FileDoesNotExist_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Optional) Returns the information about the file..
        /// </summary>
        public static string WaitFile_FileInfo_Description {
            get {
                return ResourceManager.GetString("WaitFile_FileInfo_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FileInfo.
        /// </summary>
        public static string WaitFile_FileInfo_DisplayName {
            get {
                return ResourceManager.GetString("WaitFile_FileInfo_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The storage path of the file..
        /// </summary>
        public static string WaitFile_FilePath_Description {
            get {
                return ResourceManager.GetString("WaitFile_FilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FilePath.
        /// </summary>
        public static string WaitFile_FilePath_DisplayName {
            get {
                return ResourceManager.GetString("WaitFile_FilePath_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full or relative file path..
        /// </summary>
        public static string WaitFile_FilePath_HintText {
            get {
                return ResourceManager.GetString("WaitFile_FilePath_HintText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the amount of time (in milliseconds) for the file re-check. Any values out of the range of 100-30000 milliseconds is reseted to its nearest limit. The default value is 500..
        /// </summary>
        public static string WaitFile_Interval_Description {
            get {
                return ResourceManager.GetString("WaitFile_Interval_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interval.
        /// </summary>
        public static string WaitFile_Interval_DisplayName {
            get {
                return ResourceManager.GetString("WaitFile_Interval_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The accepted value range is from {0} to {1}. The value will be reseted to its nearest limit..
        /// </summary>
        public static string WaitFile_Interval_Range_Error {
            get {
                return ResourceManager.GetString("WaitFile_Interval_Range_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Throws the latest recorded file exception when the timeout is reached..
        /// </summary>
        public static string WaitFile_ThrowFileException_Description {
            get {
                return ResourceManager.GetString("WaitFile_ThrowFileException_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ThrowFileException.
        /// </summary>
        public static string WaitFile_ThrowFileException_DisplayName {
            get {
                return ResourceManager.GetString("WaitFile_ThrowFileException_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waits until the file exists..
        /// </summary>
        public static string WaitFile_WaitForExist_Description {
            get {
                return ResourceManager.GetString("WaitFile_WaitForExist_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WaitForExist.
        /// </summary>
        public static string WaitFile_WaitForExist_DisplayName {
            get {
                return ResourceManager.GetString("WaitFile_WaitForExist_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compress files into a zip archive..
        /// </summary>
        public static string Zip_Description {
            get {
                return ResourceManager.GetString("Zip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip.
        /// </summary>
        public static string Zip_DisplayName {
            get {
                return ResourceManager.GetString("Zip_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns the amount of files added to zip archive..
        /// </summary>
        public static string Zip_FilesCount_Description {
            get {
                return ResourceManager.GetString("Zip_FilesCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FilesCount.
        /// </summary>
        public static string Zip_FilesCount_DisplayName {
            get {
                return ResourceManager.GetString("Zip_FilesCount_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path of the file(s) or folder(s) that will be compressed. Can be a string or a collection of strings..
        /// </summary>
        public static string Zip_ToCompress_Description {
            get {
                return ResourceManager.GetString("Zip_ToCompress_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ToCompress.
        /// </summary>
        public static string Zip_ToCompress_DisplayName {
            get {
                return ResourceManager.GetString("Zip_ToCompress_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path of the zip archive..
        /// </summary>
        public static string Zip_ZipFilePath_Description {
            get {
                return ResourceManager.GetString("Zip_ZipFilePath_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ZipFilePath.
        /// </summary>
        public static string Zip_ZipFilePath_DisplayName {
            get {
                return ResourceManager.GetString("Zip_ZipFilePath_DisplayName", resourceCulture);
            }
        }
    }
}
